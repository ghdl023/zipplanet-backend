<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kh.zipplanet.domain.review.mapper.ReviewMapper">
    <insert id="createReview" parameterType="map">
        INSERT INTO user_review(
            review_id, user_id, total_rate, trans_rate, manage_rate, infra_rate, life_rate, title, description, jibun,
            pos, floors_count, pyung_count, room_info, room_option, contract_type_id, start_date, end_date
        ) VALUES (
            SEQ_REVIEWID.NEXTVAL,
            #{reviewCreateRequest.userId},
            #{reviewCreateRequest.totalRate},
            #{reviewCreateRequest.transRate},
            #{reviewCreateRequest.manageRate},
            #{reviewCreateRequest.infraRate},
            #{reviewCreateRequest.lifeRate},
            #{reviewCreateRequest.title},
            #{reviewCreateRequest.description},
            #{reviewCreateRequest.jibun},
            #{reviewCreateRequest.pos},
            #{reviewCreateRequest.floorsCount},
            #{reviewCreateRequest.pyungCount},
            #{reviewCreateRequest.roomInfo},
            #{reviewCreateRequest.roomOption},
            #{reviewCreateRequest.contractTypeId},
            #{reviewCreateRequest.startDate},
            <choose>
                <when test="reviewCreateRequest.endDate !=null and !reviewCreateRequest.endDate.equals('')">
                    #{reviewCreateRequest.endDate}
                </when>
                <otherwise>
                    null
                </otherwise>
            </choose>
        )
    </insert>

    <select id="searchByPos" resultType="com.kh.zipplanet.domain.review.model.ReviewVo">
        SELECT a.*, NVL(z.zzim_yn, 'N') as zzim_yn
        FROM (
            SELECT a.*, m.nickname as creator, ROWNUM as rnum
            FROM (
                SELECT *
                FROM user_review
                WHERE 1=1
                AND pos = #{pos}
                AND delete_yn = 'N'
                ORDER BY ${sort} DESC
            ) a, members m
            WHERE a.user_id = m.user_id
        ) a LEFT OUTER JOIN user_review_zzim_log z
        ON a.review_id = z.review_id
        WHERE rnum between ${offset} and  ( ${offset} + ${limit} - 1 )
    </select>

    <select id="searchByPosTotalCount">
        SELECT COUNT(*)
        FROM (
            SELECT a.*, ROWNUM as rnum
            FROM (
                SELECT *
                FROM user_review
                WHERE 1=1
                AND pos = #{pos}
                AND delete_yn = 'N'
            ) a
        )
    </select>

    <select id="searchByKeyword" resultType="com.kh.zipplanet.domain.review.model.ReviewVo">
        SELECT a.*, NVL(z.zzim_yn, 'N') as zzim_yn
        FROM (
            SELECT a.*, m.nickname as creator, ROWNUM as rnum
            FROM (
                SELECT *
                FROM user_review
                WHERE 1=1
                AND jibun like '%' || #{keyword} || '%'
                AND delete_yn = 'N'
                ORDER BY ${sort} DESC
            ) a, members m
            WHERE a.user_id = m.user_id
        ) a LEFT OUTER JOIN user_review_zzim_log z
        ON a.review_id = z.review_id
        WHERE rnum between ${offset} and ( ${offset} + ${limit} - 1 )
    </select>

    <select id="searchByKeywordTotalCount">
        SELECT COUNT(*)
        FROM (
            SELECT a.*, ROWNUM as rnum
            FROM (
                SELECT *
                FROM user_review
                WHERE 1=1
                AND jibun like '%' || #{keyword} || '%'
                AND delete_yn = 'N'
            ) a
        )
    </select>

    <select id="searchByFilter" resultType="com.kh.zipplanet.domain.review.model.ReviewVo">
        SELECT a.*, NVL(z.zzim_yn, 'N') as zzim_yn
        FROM (
            SELECT a.*, m.nickname as creator, ROWNUM as rnum
            FROM (
                SELECT *
                FROM user_review
                WHERE 1=1
                <if test="gu != null and gu != ''">
                    AND jibun like '%' || #{gu} || '%'
                </if>
                <if test="dong != null and dong != ''">
                    AND jibun like '%' || #{dong} || '%'
                </if>
                <if test="contractTypeId != null and contractTypeId != ''">
                    AND contract_type_id = #{contractTypeId}
                </if>
                AND total_rate between 0 and ${rate}
                AND delete_yn = 'N'
                ORDER BY ${sort} DESC
            ) a, members m
            WHERE a.user_id = m.user_id
        ) a LEFT OUTER JOIN user_review_zzim_log z
        ON a.review_id = z.review_id
        WHERE rnum between ${offset} and  ( ${offset} + ${limit} - 1 )
    </select>

    <select id="searchByFilterTotalCount">
        SELECT COUNT(*)
        FROM (
            SELECT a.*, ROWNUM as rnum
            FROM (
                SELECT *
                FROM user_review
                WHERE 1=1
                <if test="gu != null and gu != ''">
                    AND jibun like '%' || #{gu} || '%'
                </if>
                <if test="dong != null and dong != ''">
                    AND jibun like '%' || #{dong} || '%'
                </if>
                <if test="contractTypeId != null and contractTypeId != ''">
                    AND contract_type_id = #{contractTypeId}
                </if>
                AND total_rate between 0 and ${rate}
                AND delete_yn = 'N'
                ORDER BY ${sort} DESC
            ) a
        )
    </select>

    <update id="updateReview" parameterType="map">
        UPDATE user_review
        SET
            total_rate = #{reviewUpdateRequest.totalRate},
            trans_rate = #{reviewUpdateRequest.transRate},
            manage_rate = #{reviewUpdateRequest.manageRate},
            infra_rate = #{reviewUpdateRequest.infraRate},
            life_rate = #{reviewUpdateRequest.lifeRate},
            title = #{reviewUpdateRequest.title},
            description = #{reviewUpdateRequest.description},
            jibun = #{reviewUpdateRequest.jibun},
            pos = #{reviewUpdateRequest.pos},
            floors_count = #{reviewUpdateRequest.floorsCount},
            pyung_count = #{reviewUpdateRequest.pyungCount},
            room_info = #{reviewUpdateRequest.roomInfo},
            room_option = #{reviewUpdateRequest.roomOption},
            contract_type_id = #{reviewUpdateRequest.contractTypeId},
            start_date = #{reviewUpdateRequest.startDate},
            <choose>
                <when test="reviewUpdateRequest.endDate !=null and !reviewUpdateRequest.endDate.equals('')">
                    end_date = #{reviewUpdateRequest.endDate}
                </when>
                <otherwise>
                    end_date = ''
                </otherwise>
            </choose>
        WHERE 1=1
        AND review_id = #{reviewUpdateRequest.reviewId}
        AND user_id = #{reviewUpdateRequest.userId}
    </update>

    <update id="deleteReview" parameterType="map">
        UPDATE user_review
        SET
            delete_yn = 'Y'
        WHERE 1=1
        AND review_id = #{reviewDeleteRequest.reviewId}
        AND user_id = #{reviewDeleteRequest.userId}
    </update>

    <select id="searchMyReview" resultType="com.kh.zipplanet.domain.review.model.ReviewVo">
        select * from user_review
        where 1=1
        and user_id = #{userId}
        and delete_yn = 'N'
    </select>


    <select id="selectAllPos" resultType="com.kh.zipplanet.domain.review.model.PosVo">
        SELECT SUBSTR(POS, 0, INSTR(pos, ',', 1, 1)-1) as lat, SUBSTR(POS, INSTR(pos, ',', 1, 1)+1) as lng, pos
        FROM USER_REVIEW
        WHERE 1=1
        AND DELETE_YN = 'N'
    </select>
</mapper>